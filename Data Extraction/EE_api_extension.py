"""
Extension to landxplorer api
allows for extraction of more than landsat data from usgs

purpose for this project is to get modis data sets

landsatxplore has two functions:
      download:  Download one or several Landsat scenes.
      search:    Search for Landsat scenes.

this script will search for the appropriate images and then download ones
which exist with modis

the quality ensurance of images in this approach will be purely through landsat
images.

"""

# import requests
import landsatxplore as le
from landsatxplore.earthexplorer import EarthExplorer, EE_URL, EE_LOGIN_URL, EE_LOGOUT_URL, EE_DOWNLOAD_URL, EE_FOLDER
from landsatxplore.util import is_product_id
import util
import os

### GET Dataset MetaData ###
TO_ADD = [
    'MODIS'
]
ALL_DS = util.load_json(os.path.join(os.path.dirname(os.getcwd()) + r"/assets/Datasets.json"))
DS = {}
for ds in TO_ADD:
    DS.update(ALL_DS[ds])

class EarthExplorerExtended(EarthExplorer):
    def __init__(self, username, password):
        super(EarthExplorerExtended, self).__init__(username, password)
        self._EE_FOLDER = EE_FOLDER.update(DS)

    def generic_download(self, data_set, scene, output_dir):
        """
        wrap around EE download to allow for
        :param data_set:string name of data set being downloaded
        :param scene: scene object generated by search
        :param output_dir:
        :return:
        """

        ### LANDSAT DOWNLOAD ###
        if is_product_id(scene['entityID']):
            filename = self.download(scene['entityID'], output_dir)
        ### NON-LANDSAT ###
        else:
            scene_id = self.api.lookup(data_set, [scene['entityID']], inverse=True)[0]
            url = EE_DOWNLOAD_URL.format(folder=self._EE_FOLDER[data_set], sid=scene_id)
            filename = self._download(url, output_dir)

    def GET_MODIS_LANDSAT_PAIR(self, datasets, latitude, longitude, start_date, end_date, max_cloud_cover):
        """
        Given modis landsat datasets and required search info, find pairs of data
        :param datasets: tuple of Landsat, modis
        :param latitude: float
        :param longitude: float
        :param start_date: Datetime
        :param end_date: Datetime
        :param max_cloud_cover: int (0-100)
        :return:
        """
        ### Search for Landsat products ###
        Landsat_scenes = self.api.search(
            dataset=datasets[0],
            latitude=latitude,
            longitude=longitude,
            start_date=start_date,
            end_date=end_date,
            max_cloud_cover=max_cloud_cover)

        ### Search for MODIS products ###
        MODIS_scenes = self.api.search(
            dataset=datasets[1],
            latitude=latitude,
            longitude=longitude,
            start_date=start_date,
            end_date=end_date,
            max_cloud_cover=max_cloud_cover)

        return Landsat_scenes, MODIS_scenes


